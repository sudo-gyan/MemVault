version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-memvault}
      POSTGRES_USER: ${POSTGRES_USER:-memvault_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-memvault_password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-memvault_user} -d ${POSTGRES_DB:-memvault}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Web Application
  web:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      POSTGRES_DATABASE_URL: postgresql://${POSTGRES_USER:-memvault_user}:${POSTGRES_PASSWORD:-memvault_password}@db:5432/${POSTGRES_DB:-memvault}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --worker-class sync --timeout 120 memvault.wsgi:application"

  # Celery Worker
  celery:
    build: .
    env_file:
      - .env
    environment:
      POSTGRES_DATABASE_URL: postgresql://${POSTGRES_USER:-memvault_user}:${POSTGRES_PASSWORD:-memvault_password}@db:5432/${POSTGRES_DB:-memvault}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A memvault worker --loglevel=info --concurrency=2

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build: .
    env_file:
      - .env
    environment:
      POSTGRES_DATABASE_URL: postgresql://${POSTGRES_USER:-memvault_user}:${POSTGRES_PASSWORD:-memvault_password}@db:5432/${POSTGRES_DB:-memvault}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A memvault beat --loglevel=info

volumes:
  postgres_data: